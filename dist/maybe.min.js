(function(root,factory){if(typeof define==="function"&&define.amd){define([],factory)}else if(typeof exports==="object"){module.exports=factory()}else{root.maybe=factory()}})(this,function(){"use strict";var freeze=Object.freeze||function(object){return object};var maybe=function(value,empty){if(arguments.length===0){throw new Error("Missing value in maybe constructor")}else if(arguments.length===1){empty=value===undefined||value===null}else if(typeof empty==="function"){empty=empty(value)}else{empty=value===empty}if(value&&value.type==="maybe"){return value}else if(empty===true){return maybe.nothing}else if(empty===false){return maybe.just(value)}else{throw new TypeError('Non boolean "empty" value in maybe constructor')}};maybe.just=function(value){var self={};self.type="maybe";self.empty=false;self.nonEmpty=true;self.filter=function(fn){return fn(value)?self:maybe.nothing};self.map=function(fn){return maybe(fn(value))};self.forEach=function(fn){fn(value);return self};self.get=function(){return value};self.getOrElse=function(orElse){return value};self.getOrThrow=function(e){return value};self.orElse=function(orElse){return self};self.toString=function(){return String(value)};return freeze(self)};maybe.nothing=function(){var self={};self.type="maybe";self.empty=true;self.nonEmpty=false;self.filter=function(fn){return self};self.map=function(fn){return self};self.forEach=function(fn){return self};self.get=function(){self.getOrThrow()};self.getOrElse=function(orElse){return typeof orElse==="function"?orElse():orElse};self.getOrThrow=function(e){throw e||new Error("Trying to get value of Nothing")};self.orElse=function(orElse){return maybe(self.getOrElse(orElse))};self.toString=function(){return""};return freeze(self)}();return freeze(maybe)});
